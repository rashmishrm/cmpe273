# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import wallet_pb2 as wallet__pb2


class WalletStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.encrypt = channel.unary_unary(
        '/Wallet/encrypt',
        request_serializer=wallet__pb2.CardEncryptRequest.SerializeToString,
        response_deserializer=wallet__pb2.CardEncryptResponse.FromString,
        )
    self.decrypt = channel.unary_unary(
        '/Wallet/decrypt',
        request_serializer=wallet__pb2.CardDecryptRequest.SerializeToString,
        response_deserializer=wallet__pb2.CardDecryptResponse.FromString,
        )


class WalletServicer(object):

  def encrypt(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def decrypt(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WalletServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'encrypt': grpc.unary_unary_rpc_method_handler(
          servicer.encrypt,
          request_deserializer=wallet__pb2.CardEncryptRequest.FromString,
          response_serializer=wallet__pb2.CardEncryptResponse.SerializeToString,
      ),
      'decrypt': grpc.unary_unary_rpc_method_handler(
          servicer.decrypt,
          request_deserializer=wallet__pb2.CardDecryptRequest.FromString,
          response_serializer=wallet__pb2.CardDecryptResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Wallet', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
